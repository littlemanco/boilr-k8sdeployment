# Generated by Boilr at {{ time "" }}
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  labels:
    application: "{{ Application | toLower }}"
    role: "{{ Role | toLower }}"
  name: "{{ Application | toLower }}-deployment"
  namespace: "{{ Namespace }}"
spec:
  replicas: {{ Replicas }}
  selector:
    matchLabels:
      application: "{{ Application | toLower }}"
      role: "{{ Role | toLower }}"
  strategy:
    rollingUpdate:
      maxSurge: {{ MaxSurge }}
      maxUnavailable: {{ MaxUnavailable }}
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        application: "{{ Application | toLower }}"
        role: "{{ Role | toLower }}"
    spec:
      # volumes:
      # - name: "{{ Service | toLower }}-etc-conf-d"
      # configMap:
      #   name: "{{ Service | toLower }}-etc-conf-d"
      # - name: "{{ Service | toLower }}-data"
      #   hostPath:
      #     path: /data/{{ Service | toLower }}/
      containers:
      - name: "{{ Application | toLower }}"
        # env:
        # - name: "FOO"
        #   value: "BAR"
        image: "{{ Image }}:{{ ImageVersion }}" # Todo: Update this
        {{ if eq ImageVersion "latest" }}imagePullPolicy: "Always"{{ else }}imagePullPolicy: "IfNotPresent"{{ end }}
        # args:
        #   - "command"
        #   - "line" 
        #   - "arguments"
        ports:
        - containerPort: {{ ApplicationPort }}
          protocol: {{ ApplicationPortProtocol }}
        # volumeMounts:
        # - name: "{{ Service | toLower }}-etc-conf-d"
        #   mountPath: "/etc/{{ Service | toLower }}/conf.d"
        # - name: "{{ Service | toLower }}-data
        #   mountPath: "/data"
        livenessProbe:
          {{ if eq ProbeType "http" }}httpGet:
            # Path to probe; should be cheap, but representative of typical behavior
            path: /
            port: 80
            httpHeaders:
              - name: Host
                value: www.example.com # Todo: Fix this
              #- name: X-Custom-Header
              #  value: Awesome
          initialDelaySeconds: {{ ApplicationBootTime }}
          timeoutSeconds: {{ ApplicationHealthCheckPeriod }}{{ else if eq ProbeType "tcp"}}tcpSocket:
            port: 9000          
          initialDelaySeconds: {{ ApplicationBootTime }}
          timeoutSeconds: {{ ApplicationHealthCheckPeriod }}{{ end }}
        readinessProbe:
          {{ if eq ProbeType "http" }}httpGet:
            # Path to probe; akin to a status check. 
            path: /status.html
            port: 80
            httpHeaders:
              - name: Host
                value: www.example.com # Todo: Fix this
              #- name: X-Custom-Header
              #  value: Awesome
          initialDelaySeconds: {{ ApplicationBootTime }}
          timeoutSeconds: {{ ApplicationHealthCheckPeriod }}{{ else if eq ProbeType "tcp"}}tcpSocket:
            port: 9000          
          initialDelaySeconds: {{ ApplicationBootTime }}
          timeoutSeconds: {{ ApplicationHealthCheckPeriod }}{{ end }}
      restartPolicy: "Always"
      securityContext: {} 
